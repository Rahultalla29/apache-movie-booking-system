/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SoftA2Movie;

import java.awt.List;
import java.io.FileReader;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author User
 */
public class StaffMoviesGUI extends javax.swing.JFrame {

    /**
     * Creates new form StaffMovies
     */
    boolean admin;
    public StaffMoviesGUI(boolean isAdmin) {
        this.admin = isAdmin;
        initComponents();
    }
    
    public void readMovies() {
//        Need to READ MOVIES CSV AND CONVERT IT INTO JTABLE
//                            try {
// 
//                        String strFile = "c:/companylist.csv";  
// 
//                        BufferedReader br = new BufferedReader(new FileReader(strFile));
//                        String strLine = "";
//                        StringTokenizer st = null;
//                        int lineNumber = 0, tokenNumber = 0;
// 
//                        ArrayList<String> arrayList = new ArrayList<String>();
// 
//                        while ((strLine = br.readLine()) != null) {
//                            lineNumber++;
// 
//                            st = new StringTokenizer(strLine, ",");
//                            while (st.hasMoreTokens()) {
// 
//                                tokenNumber++;
//                                arrayList.add(st.nextToken());
// 
//                            tokenNumber = 0;
//                        }
//                       Object[] elements = arrayList.toArray();
// 
//                        Scanner input = new Scanner(System.in);
//                        System.out.print("Enter Ticker symbol");
// 
//                    } }catch (Exception e1) {
//                        System.out.println("Exception while reading csv file: " + e1);
//                    }
    }
    public int strToInt(String str) {
        int val = 0;
        if (str == null ||str.equals("")){
            return val;
        }else{
            val = Integer.parseInt(str);
        }
        return val;
    }
 
    public boolean IsEmpty(String str) {
        
        if (str == null ||str.equals("")){
            return false;
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        movieAdd = new javax.swing.JButton();
        movieDelete = new javax.swing.JButton();
        modifyMovie = new javax.swing.JButton();
        name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        synopsis = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        classification = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        releaseDate = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        director = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cast = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        length = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        allMovies = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 255));

        jLabel1.setBackground(new java.awt.Color(102, 102, 102));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Naar Cinemas ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(728, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(250, 250, 250))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        movieAdd.setText("Add Movie");
        movieAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieAddActionPerformed(evt);
            }
        });

        movieDelete.setText("Delete Movie");
        movieDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieDeleteActionPerformed(evt);
            }
        });

        modifyMovie.setText("Modify Movie");
        modifyMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyMovieActionPerformed(evt);
            }
        });

        name.setActionCommand("<Not Set>");

        jLabel2.setText("Movie Name");

        jLabel3.setText("Synopsis");

        jLabel5.setText("Classification");

        jLabel6.setText("Release Date");

        jLabel7.setText("Director");

        jLabel8.setText("Cast (semicolon seperated)");

        jLabel9.setText("Length");

        jLabel10.setText("Price");

        jLabel11.setText("All Movies");

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jLabel4.setText("For Deletions : Only Require Name");

        jLabel12.setText("For Modifications: Require Name and Corresponding Field/s");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        allMovies.setModel(App.getAppInstance().db.getJtableForDisplayMovie(App.getAppInstance().db.getMovies()).getModel());
        allMovies.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allMoviesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(allMovies);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addComponent(synopsis, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(classification, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(length, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(75, 75, 75)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10)
                                    .addComponent(cast, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(releaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(director, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(movieAdd)
                                .addGap(26, 26, 26)
                                .addComponent(modifyMovie)
                                .addGap(18, 18, 18)
                                .addComponent(movieDelete))
                            .addComponent(jLabel12)
                            .addComponent(jLabel4)
                            .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(synopsis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(classification, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(length, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(releaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(director, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(cast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(movieDelete)
                            .addComponent(modifyMovie)
                            .addComponent(movieAdd))
                        .addGap(58, 58, 58)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(280, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void movieAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieAddActionPerformed
        String title = name.getText();
        
        // Parse date
        String date = releaseDate.getText();

        

        String syno = synopsis.getText();
        String direc = director.getText();
        String classify = classification.getText();
        String casts = cast.getText();
        String len = length.getText();
        String cost = price.getText();
        
        
        if(IsEmpty(title) == false || IsEmpty(date)== false
                || IsEmpty(syno)== false||IsEmpty(direc) == false
                ||IsEmpty(classify)== false||IsEmpty(casts)== false
                ||IsEmpty(len)== false||IsEmpty(cost)== false){
            JOptionPane.showMessageDialog(null,"Error Adding Movie: Some Input Boxes Are Still Empty","Unsuccessful Movie Add Attempt", JOptionPane.ERROR_MESSAGE);
        }  
        else if (App.getAppInstance().db.movieExists(title)) {
            JOptionPane.showMessageDialog(null,"Error Adding Movie: Movie Already Exists","Unsuccessful Movie Add Attempt", JOptionPane.ERROR_MESSAGE);
            
        }else {
            //Parse Date
                Date rDate = null;
                try {
                    rDate = new SimpleDateFormat("dd/MM/yyyy").parse(date);}
                catch (Exception e) {
                        System.out.println("Error: Parsing Given Date");
                        JOptionPane.showMessageDialog(null,"Error: Parsing Given Date","Unsuccessful Movie Add Attempt", JOptionPane.ERROR_MESSAGE);
                        return;
                        }            
                // Parse len
                
                int length = 0;
                Double price = 0.00;
                try {
                    length = Integer.parseInt(len);
                    price = Double.parseDouble(cost);}
                    
                catch (Exception e) {
                        
                        JOptionPane.showMessageDialog(null,"Error Adding Movie: Length & Price must be numeric","Unsuccessful Movie Add Attempt", JOptionPane.ERROR_MESSAGE);
                        return;
                }
                if(App.getAppInstance().db.addMovie(title, syno, classify, rDate, direc, casts, length, price)){
                    JOptionPane.showMessageDialog(null,"Successfully Added Movie","Successful Movie Add Attempt", JOptionPane.INFORMATION_MESSAGE);
                    new StaffMoviesGUI(this.admin).setVisible(true); 
                    this.setVisible(false);
                }else{JOptionPane.showMessageDialog(null,"Unsuccessfull Add Movie: TRY AGAIN!","Unsuccessful Movie Add Attempt", JOptionPane.ERROR_MESSAGE);}
        }
        
        
        
    }//GEN-LAST:event_movieAddActionPerformed

    private void modifyMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyMovieActionPerformed
        String title = name.getText();
        
        // Parse date
        String date = releaseDate.getText();

        

        String syno = synopsis.getText();
        String direc = director.getText();
        String classify = classification.getText();
        String casts = cast.getText();
        String len = length.getText();
        String cost = price.getText();
        
        if (!App.getAppInstance().db.movieExists(title)) {
            JOptionPane.showMessageDialog(null,"Error Adding Movie: Movie Doesn't Exist","Unsuccessful Movie Modify Attempt", JOptionPane.ERROR_MESSAGE);
            
        }
        else{
            if (IsEmpty(date)){
                //Parse Date
                Date rDate = null;
                try {
                    rDate = new SimpleDateFormat("dd/MM/yyyy").parse(date);}
                catch (Exception e) {
                        System.out.println("Error: Parsing Given Date");
                        JOptionPane.showMessageDialog(null,"Error: Parsing Given Date","Unsuccessful Movie Modify Attempt", JOptionPane.ERROR_MESSAGE);
                        return;
                        } 
                App.getAppInstance().db.modifyMovieReleaseDate(title, rDate);
                
            }
            if (IsEmpty(syno)){
                App.getAppInstance().db.modifyMovieSynposis(title, syno);
            }
            if (IsEmpty(direc)){
                App.getAppInstance().db.modifyMovieDirector(title, direc);
            }
            if (IsEmpty(classify)){
                App.getAppInstance().db.modifyMovieRating(title, classify);
            }
            if (IsEmpty(casts)){
                App.getAppInstance().db.modifyMovieCast(title, casts);
            }
            if (IsEmpty(len)){
                
                int length = 0;
                
                try {
                    length = Integer.parseInt(len);}
                    
                catch (Exception e) {
                        
                        JOptionPane.showMessageDialog(null,"Error Adding Movie: Length must be numeric","Unsuccessful Movie Modify Attempt", JOptionPane.ERROR_MESSAGE);
                        return;
                }                
                App.getAppInstance().db.modifyMovieDuration(title, length);
            }
            if (IsEmpty(cost)){
                
                
                Double price = 0.00;
                try {
                    price = Double.parseDouble(cost);}
                    
                catch (Exception e) {
                        
                        JOptionPane.showMessageDialog(null,"Error Adding Movie: Price must be numeric","Unsuccessful Movie Modify Attempt", JOptionPane.ERROR_MESSAGE);
                        return;
                }               
                App.getAppInstance().db.modifyMoviePrice(title, price);
            }
            JOptionPane.showMessageDialog(null,"Successfully Modified Movie","Successful Movie Modify Attempt", JOptionPane.INFORMATION_MESSAGE);
            new StaffMoviesGUI(this.admin).setVisible(true); 
            this.setVisible(false);
            
        }
    }//GEN-LAST:event_modifyMovieActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        if (!this.admin){
            new StaffMainGUI(this.admin).setVisible(true);
        }
        else{new AdminMainGUI(this.admin).setVisible(true);}
        this.setVisible(false);
    }//GEN-LAST:event_backActionPerformed

    private void allMoviesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allMoviesMouseClicked

        allMovies.setEnabled(false);

    }//GEN-LAST:event_allMoviesMouseClicked

    private void movieDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieDeleteActionPerformed
        String title = name.getText();
        if (!App.getAppInstance().db.movieExists(title)) {
            JOptionPane.showMessageDialog(null,"Error Adding Movie: Movie Doesn't Exist","Unsuccessful Movie Modify Attempt", JOptionPane.ERROR_MESSAGE);
            
        }
        App.getAppInstance().db.removeMovie(title);
        JOptionPane.showMessageDialog(null,"Successfully Deleted Movie","Successful Movie Deletion Attempt", JOptionPane.INFORMATION_MESSAGE);
        new StaffMoviesGUI(this.admin).setVisible(true); 
        this.setVisible(false);
    }//GEN-LAST:event_movieDeleteActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(StaffMoviesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(StaffMoviesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(StaffMoviesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(StaffMoviesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new StaffMoviesGUI().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable allMovies;
    private javax.swing.JButton back;
    private javax.swing.JTextField cast;
    private javax.swing.JTextField classification;
    private javax.swing.JTextField director;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField length;
    private javax.swing.JButton modifyMovie;
    private javax.swing.JButton movieAdd;
    private javax.swing.JButton movieDelete;
    private javax.swing.JTextField name;
    private javax.swing.JTextField price;
    private javax.swing.JTextField releaseDate;
    private javax.swing.JTextField synopsis;
    // End of variables declaration//GEN-END:variables
}
